From ab7ee7f3786c1cf83e4835f50e509261573f39df Mon Sep 17 00:00:00 2001
From: Kevin Mihelich <kevin@archlinuxarm.org>
Date: Fri, 15 Nov 2019 18:43:53 -0700
Subject: [PATCH] fix buiild for 32-bit

---
 backend/wbprivate/sqlide/wb_sql_editor_form.cpp |  2 +-
 library/ssh/SSHCommon.cpp                       | 12 ++++++------
 library/ssh/SSHSession.cpp                      |  6 +++---
 3 files changed, 10 insertions(+), 10 deletions(-)

diff --git a/backend/wbprivate/sqlide/wb_sql_editor_form.cpp b/backend/wbprivate/sqlide/wb_sql_editor_form.cpp
index 6a2f65d..528fd96 100644
--- a/backend/wbprivate/sqlide/wb_sql_editor_form.cpp
+++ b/backend/wbprivate/sqlide/wb_sql_editor_form.cpp
@@ -2016,7 +2016,7 @@ grt::StringRef SqlEditorForm::do_exec_sql(Ptr self_ptr, std::shared_ptr<std::str
 
     bool results_left = false;
     for (auto &statement_range : statement_ranges) {
-      logDebug3("Executing statement range: %lu, %lu...\n", statement_range.first, statement_range.second);
+      logDebug3("Executing statement range: %u, %u...\n", statement_range.first, statement_range.second);
 
       statement = sql->substr(statement_range.first, statement_range.second);
       std::list<std::string> sub_statements;
diff --git a/library/ssh/SSHCommon.cpp b/library/ssh/SSHCommon.cpp
index e65ecb6..093ec3e 100644
--- a/library/ssh/SSHCommon.cpp
+++ b/library/ssh/SSHCommon.cpp
@@ -168,11 +168,11 @@ namespace ssh {
 
   void SSHConnectionConfig::dumpConfig() const {
     logDebug2("SSH Connection config info:\n");
-    logDebug2("SSH bufferSize: %lu\n", bufferSize);
-    logDebug2("SSH connectTimeout: %lu\n", connectTimeout);
-    logDebug2("SSH readWriteTimeout: %lu\n", readWriteTimeout);
-    logDebug2("SSH commandTimeout: %lu\n", commandTimeout);
-    logDebug2("SSH commandRetryCount: %lu\n", commandRetryCount);
+    logDebug2("SSH bufferSize: %u\n", bufferSize);
+    logDebug2("SSH connectTimeout: %u\n", connectTimeout);
+    logDebug2("SSH readWriteTimeout: %u\n", readWriteTimeout);
+    logDebug2("SSH commandTimeout: %u\n", commandTimeout);
+    logDebug2("SSH commandRetryCount: %u\n", commandRetryCount);
     logDebug2("SSH optionsDir: %s\n", optionsDir.c_str());
     logDebug2("SSH known hosts file: %s\n", knownHostsFile.c_str());
     logDebug2("SSH local host: %s\n", localhost.c_str());
@@ -180,7 +180,7 @@ namespace ssh {
     logDebug2("SSH remote host: %s\n", remotehost.c_str());
     logDebug2("SSH remote port: %d\n", remoteport);
     logDebug2("SSH remote ssh host: %s\n", remoteSSHhost.c_str());
-    logDebug2("SSH remote ssh port: %lu\n", remoteSSHport);
+    logDebug2("SSH remote ssh port: %u\n", remoteSSHport);
     logDebug2("SSH strict host key check: %s\n", strictHostKeyCheck ? "yes" : "no");
   }
 
diff --git a/library/ssh/SSHSession.cpp b/library/ssh/SSHSession.cpp
index a30ebbc..b223171 100644
--- a/library/ssh/SSHSession.cpp
+++ b/library/ssh/SSHSession.cpp
@@ -147,7 +147,7 @@ namespace ssh {
     try {
       _session->connect();
     } catch (ssh::SshException &exc) {
-      logError("Unable to connect: %s:%lu\nError was: %s\n", config.remoteSSHhost.c_str(), config.remoteSSHport,
+      logError("Unable to connect: %s:%u\nError was: %s\n", config.remoteSSHhost.c_str(), config.remoteSSHport,
                exc.getError().c_str());
       return std::make_tuple(SSHReturnType::CONNECTION_FAILURE, exc.getError());
     }
@@ -360,7 +360,7 @@ namespace ssh {
       }
     } while (true);
 
-    logDebug3("Bytes read: %lu\n", bytesRead);
+    logDebug3("Bytes read: %u\n", bytesRead);
     return std::make_tuple(so.str(), retError, channel->getExitStatus());
   }
 
@@ -479,7 +479,7 @@ namespace ssh {
       }
     } while (true);
 
-    logDebug3("Bytes read: %lu\n", bytesRead);
+    logDebug3("Bytes read: %u\n", bytesRead);
     return std::make_tuple(so.str(), retError, channel->getExitStatus());
   }
 
-- 
2.23.0

